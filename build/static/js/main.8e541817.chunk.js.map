{"version":3,"sources":["_configs/index.js","_configs/prod-config.js","_components/Layout/Header.jsx","_components/Layout/Footer.jsx","_components/PrivateLayout.jsx","_components/PrivateRoute.jsx","_constants/action.js","redux/action/alert.js","_utils/history.js","_components/DataTable/Header/index.js","_components/DataTable/Pagination/index.js","_components/DataTable/Search/index.js","redux/services/base-api.js","_constants/store.js","_constants/endpoints.js","redux/services/wallet.js","_constants/messages.js","_components/Modal/FormModal.jsx","pages/HomePage.jsx","App.jsx","serviceWorker.js","redux/reducers/alert.reducer.js","redux/reducers/utils.reducer.js","redux/reducers/index.js","redux/sagas/walletSaga.js","redux/sagas/root_saga.js","redux/store.js","index.js"],"names":["module","exports","require","BASE_API_URL","Header","props","id","className","to","href","data-bs-toggle","data-bs-target","Footer","currentYear","Date","getFullYear","PrivateLayout","children","useSelector","state","showBlockUI","alert","utils","get","tag","blocking","PrivateRoute","Component","component","rest","render","ACTION_CONST","REQUEST_SUBMIT","REQUEST_DONE","ALERT_SUCCESS","ALERT_FAILS","ALERT_WARNING","ALERT_CLEAR","ALERT_LINK","ALERT_LINK_CLEAR","SUBMIT_GET_WALLETS","GET_WALLETS_SUCCESS","SUBMIT_WALLET_FORM","SUBMIT_WALLET_SUCCESS","DELETE_WALLET","DELETE_WALLET_SUCCESS","actAlertLinkClear","type","actAlertMsgFail","message","actAlertMsgSuccess","history","createBrowserHistory","headers","onSorting","useState","sortingField","setSortingField","sortingOrder","setSortingOrder","map","name","field","sortable","key","onClick","order","onSortingChange","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","useEffect","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","Prev","disabled","Next","Search","onSearch","placeholder","search","setSearch","style","border","borderRadius","backgroundColor","boxShadow","outline","color","value","onChange","e","target","request","axios","create","baseURL","timeout","ACCESS_TOKEN","REFRESH_TOKEN","ACCOUNT_ID","USER_INFO","TIMEOUT","Accept","appApi","url","method","then","response","catch","err","post","data","delete","put","ENDPOINTS","getListWallets","baseApi","submitWallet","address","deleteWallet","MESSAGES","FormModal","dispatch","useDispatch","setAddress","privateKey","setPrivateKey","network","setNetwork","isSubmitted","setIsSubmitted","resetForm","setDefaultValue","handleCancel","event","handleSubmit","preventDefault","result","code","status","$","trigger","er","tabIndex","aria-labelledby","aria-hidden","data-bs-backdrop","data-bs-keyboard","onSubmit","data-bs-dismiss","aria-label","minLength","maxLength","required","HomePage","listWallets","setListWallets","setCurrentPage","sorting","setSorting","totalItems","setTotalItems","setIsCopied","isShowConfirmDeleteWallet","setIsShowConfirmDeleteWallet","selectedWallet","setSelectedWallet","listWalletsData","computedData","filter","item","toLowerCase","includes","length","reversed","sort","a","b","localeCompare","slice","loadData","handleCancelDeleteModal","handleSearch","text","onCopy","isInUsed","wallet","colSpan","page","title","show","showCancel","btnSize","confirmBtnBsStyle","cancelBtnBsStyle","confirmBtnText","cancelBtnText","onConfirm","onCancel","App","toggleAlert","window","setTimeout","JSON","stringify","alertLink","trim","React","rel","exact","path","isShow","alertMsg","document","getElementById","alertIdMsg","parentElement","nodeName","display","opacity","Boolean","location","hostname","match","action","initialState","reducers","combineReducers","CLICK_LEFT_BAR_ACTIVE","leftBarActive","alertType","alertUrl","alertMessage","handleGetWallets","handleSubmitWalletForm","handleDeleteWallet","watchSubmitGetWallets","watchSubmitWalletForm","watchDeleteWallet","call","res","projects","takeLatest","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","middleware","applyMiddleware","createLogger","store","createStore","run","ReactDOM","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.8e541817.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\r\n    module.exports = require('./prod-config');\r\n} else {\r\n    module.exports = require('./dev-config');\r\n}","module.exports = {\r\n    BASE_API_URL: 'https://bridge.glitch.finance',\r\n    // BASE_API_URL: 'http://admin.something.casa'\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = (props) => {\r\n  return (\r\n    <>\r\n      <nav id=\"PPNavbar\" className=\"navbar navbar-expand-md navbar-light bg-white\">\r\n        <div className=\"container\">\r\n          <div className=\"w-100 d-flex align-items-center justify-content-between\">\r\n            <Link className=\"navbar-brand d-flex align-items-center\" to='/'>\r\n              {/* <img src=\"/images/logo.png\" height=\"27\" alt=\"BSCPad\" className=\"me-2\" />  */}\r\n              <span className=\"pp-site-name\">GLITCH&nbsp;-&nbsp;</span>Admin CP\r\n            </Link>\r\n            <a id=\"WalletAction\" className=\"btn btn-primary btn-sm\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#formModal\">\r\n              <i className=\"mdi mdi-plus me-1\"></i><span>Add New Wallet</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nexport default function Footer() {\r\n  const currentYear = new Date().getFullYear();\r\n  return (\r\n    <>\r\n      <div className=\"pp-footer\">\r\n        <div className=\"container text-center text-muted\">Copyright © {currentYear}. All Rights Reserved by BSCPad</div>\r\n      </div>\r\n    </>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport Header from './Layout/Header';\r\nimport Footer from './Layout/Footer';\r\nimport { get } from \"lodash\";\r\nimport BlockUi from \"react-block-ui\"\r\nimport \"react-block-ui/style.css\";\r\nexport const PrivateLayout = ({ children, ...rest }) => {\r\n    const { alert, utils } = useSelector(state => state);\r\n    const showBlockUI = useSelector((state) =>\r\n        get(state, \"utils.blocking\", false)\r\n    );\r\n    return (\r\n        <>\r\n            <BlockUi tag=\"div\" blocking={showBlockUI}>\r\n                <div className=\"pp-container\">\r\n                    <Header />\r\n                    {children}\r\n                </div>\r\n                <Footer />\r\n            </BlockUi>\r\n        </>\r\n    );\r\n};","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { PrivateLayout } from \"./PrivateLayout\";\r\n\r\nexport const PrivateRoute = ({\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        (props) => (\r\n          <PrivateLayout>\r\n            <Component {...props} />\r\n          </PrivateLayout>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","export const ACTION_CONST = {\r\n    REQUEST_SUBMIT: 'REQUEST_SUBMIT',\r\n    REQUEST_DONE: 'REQUEST_DONE',\r\n    ALERT_SUCCESS: 'ALERT_SUCCESS',\r\n    ALERT_FAILS: 'ALERT_FAILS',\r\n    ALERT_WARNING: 'ALERT_WARNING',\r\n    ALERT_CLEAR: 'ALERT_CLEAR',\r\n    ALERT_LINK: 'ALERT_LINK',\r\n    ALERT_LINK_CLEAR: 'ALERT_LINK_CLEAR',\r\n    SUBMIT_GET_WALLETS: 'SUBMIT_GET_WALLETS',\r\n    GET_WALLETS_SUCCESS: 'GET_WALLETS_SUCCESS',\r\n    SUBMIT_WALLET_FORM: 'SUBMIT_WALLET_FORM',\r\n    SUBMIT_WALLET_SUCCESS: 'SUBMIT_WALLET_SUCCESS',\r\n    DELETE_WALLET: 'DELETE_WALLET',\r\n    DELETE_WALLET_SUCCESS: 'DELETE_WALLET_SUCCESS'\r\n}","import { ACTION_CONST } from \"../../_constants/action\";\r\n\r\nexport function actAlertSuceess(message) {\r\n    return {\r\n        type: ACTION_CONST.ALERT_SUCCESS,\r\n        message\r\n\r\n    }\r\n}\r\n\r\nexport function actAlertFails(message) {\r\n    return {\r\n        type: ACTION_CONST.ALERT_FAILS,\r\n        message\r\n    }\r\n}\r\n\r\nexport function actAlertClear() {\r\n    return {\r\n        type: ACTION_CONST.ALERT_CLEAR,\r\n    }\r\n}\r\n\r\nexport function actAlertLinkClear() {\r\n    return {\r\n        type: ACTION_CONST.ALERT_LINK_CLEAR,\r\n    }\r\n}\r\n\r\nexport function actAlertMsgFail(message) {\r\n    return {\r\n        type: ACTION_CONST.ALERT_FAILS,\r\n        message\r\n    }\r\n}\r\n\r\nexport function actAlertMsgWarning(message) {\r\n    return {\r\n        type: ACTION_CONST.ALERT_WARNING,\r\n        message\r\n    }\r\n}\r\n\r\nexport function actAlertMsgSuccess(message) {\r\n    return {\r\n        type: ACTION_CONST.ALERT_SUCCESS,\r\n        message\r\n    }\r\n}\r\n\r\n\r\nexport function actRequestSubmit() {\r\n    return {\r\n        type: ACTION_CONST.REQUEST_SUBMIT,\r\n    }\r\n}\r\nexport function actDoneSubmit() {\r\n    return {\r\n        type: ACTION_CONST.REQUEST_DONE,\r\n    }\r\n}","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import React, { useState } from \"react\";\r\n\r\nconst Header = ({ headers, onSorting }) => {\r\n    const [sortingField, setSortingField] = useState(\"\");\r\n    const [sortingOrder, setSortingOrder] = useState(\"asc\");\r\n\r\n    const onSortingChange = (field) => {\r\n        const order =\r\n            field === sortingField && sortingOrder === \"asc\" ? \"desc\" : \"asc\";\r\n\r\n        setSortingField(field);\r\n        setSortingOrder(order);\r\n        onSorting(field, order);\r\n    };\r\n\r\n    return (\r\n        <thead>\r\n            <tr className=\"table-header\">\r\n                {headers.map(({ name, field, sortable }) => (\r\n                    <th key={name} onClick={() => sortable ? onSortingChange(field) : null}>\r\n                        {name}\r\n                        {sortingField && sortingField === field && (\r\n                            <i className={\r\n                                sortingOrder === \"asc\"\r\n                                    ? \"mdi mdi-chevron-down\"\r\n                                    : \"mdi mdi-chevron-up\"\r\n                            }></i>\r\n                        )}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\nconst PaginationComponent = ({\r\n    total = 0,\r\n    itemsPerPage = 10,\r\n    currentPage = 1,\r\n    onPageChange\r\n}) => {\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0)\r\n            setTotalPages(Math.ceil(total / itemsPerPage));\r\n    }, [total, itemsPerPage]);\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages = [];\r\n\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            pages.push(\r\n                <Pagination.Item\r\n                    key={i}\r\n                    active={i === currentPage}\r\n                    onClick={() => onPageChange(i)}\r\n                >\r\n                    {i}\r\n                </Pagination.Item>\r\n            );\r\n        }\r\n\r\n        return pages;\r\n    }, [totalPages, currentPage]);\r\n\r\n    if (totalPages === 0) return null;\r\n\r\n    return (\r\n        <Pagination>\r\n            <Pagination.Prev\r\n                onClick={() => onPageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n            />\r\n            {paginationItems}\r\n            <Pagination.Next\r\n                onClick={() => onPageChange(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n            />\r\n        </Pagination>\r\n    );\r\n};\r\n\r\nexport default PaginationComponent;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Search = ({ onSearch, placeholder = \"Search\" }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const onInputChange = value => {\r\n        setSearch(value);\r\n        onSearch(value);\r\n    };\r\n    return (\r\n        <div className=\"table-input-search d-flex align-items-center\" style={{ border: '1px solid rgba(206, 212, 218,.2)', borderRadius: '16px' }}>\r\n            <span className=\"mdi mdi-magnify ms-3 me-1\"></span>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-sm\"\r\n                style={{ backgroundColor: 'transparent', border: '0', boxShadow: 'none', outline: 0, color:'#999' }}\r\n                placeholder={placeholder}\r\n                value={search}\r\n                onChange={e => onInputChange(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\nimport { LOCAL_STORAGE } from \"../../_constants/store\";\r\nimport { BASE_API_URL } from \"../../_configs\";\r\n\r\nconst request = axios.create({\r\n    baseURL: BASE_API_URL,\r\n    timeout: LOCAL_STORAGE.TIMEOUT,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        // Authorization: `Bearer ${localStorage.getItem(LOCAL_STORAGE.ACCESS_TOKEN)}`,\r\n    },\r\n});\r\n\r\n// Add a response interceptor\r\nconst appApi = {\r\n    get: (url) => {\r\n        return request({\r\n                method: \"get\",\r\n                url: url,\r\n            })\r\n            .then((response) => {\r\n                return response;\r\n            })\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    post: (url, data) => {\r\n        return request({\r\n                method: \"post\",\r\n                url: url,\r\n                data: data,\r\n            })\r\n            .then((response) => {\r\n                return response;\r\n            })\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    delete: (url, data) => {\r\n        return request({\r\n                method: \"delete\",\r\n                url: url,\r\n                data: data,\r\n            })\r\n            .then((response) => {\r\n                return response;\r\n            })\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n    put: (url, data) => {\r\n        return request({\r\n                method: \"put\",\r\n                url: url,\r\n                data: data,\r\n            })\r\n            .then((response) => {\r\n                return response;\r\n            })\r\n            .catch((err) => {\r\n                throw err;\r\n            });\r\n    },\r\n};\r\n\r\nexport default appApi;","export const LOCAL_STORAGE = {\r\n    ACCESS_TOKEN: 'accessToken',\r\n    REFRESH_TOKEN: 'refreshToken',\r\n    ACCOUNT_ID: 'account_id',\r\n    USER_INFO: 'user_info',\r\n};","export const ENDPOINTS = {\r\n    GET_WALLETS: '/api/wallets',\r\n    SUBMIT_WALLET: '/api/wallets',\r\n    DELETE_WALLET: '/api/wallets'\r\n};","import baseApi from \"./base-api\";\r\nimport { ENDPOINTS } from \"../../_constants/endpoints\";\r\n\r\nexport const getListWallets = async() => {\r\n    return baseApi.get(`${ENDPOINTS.GET_WALLETS}`);\r\n};\r\n\r\nexport const submitWallet = async(data, address) => {\r\n    if (address) {\r\n        return baseApi.put(`${ENDPOINTS.SUBMIT_WALLET}`, data);\r\n    }\r\n    return baseApi.post(`${ENDPOINTS.SUBMIT_WALLET}`, data);\r\n}\r\nexport const deleteWallet = async(data) => {\r\n    return baseApi.delete(`${ENDPOINTS.DELETE_WALLET}`, data);\r\n}","export const MESSAGES = {\r\n    COPIED: \"Copied!\",\r\n    NORMAL_ERROR: \"Oop! Have an error\",\r\n    CONFIRM_DELETE: \"Are you sure to remove the selected wallet?\",\r\n    DELETE_SUCCESS: \"The wallet was removed successfully.\",\r\n    SAVE_SUCCESS: 'The wallet was saved successfully.',\r\n    ADD_SUCCESS: 'The wallet was added successfully.',\r\n    DELETE_FAILED: \"The wallet was unsuccessfully deleted.\",\r\n    DELETE_FAILED_IN_USED: \"The wallet is in use.\",\r\n    SAVE_FAILED: \"The wallet was unsuccessfully saved.\",\r\n    ADD_FAILED: \"The wallet was unsuccessfully added.\",\r\n    ADD_FAILED_EXISTS: \"The wallet address already exists.\",\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { submitWallet } from '../../redux/services/wallet';\r\nimport * as $ from 'jquery';\r\nimport { actAlertMsgFail } from '../../redux/action/alert';\r\nimport { MESSAGES } from '../../_constants/messages';\r\nconst FormModal = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [address, setAddress] = useState('');\r\n    const [privateKey, setPrivateKey] = useState('');\r\n    const [network, setNetwork] = useState('eth');\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!isSubmitted) {\r\n            setDefaultValue();\r\n        }\r\n    }, [props])\r\n\r\n    useEffect(() => {\r\n        setDefaultValue();\r\n        return () => {\r\n            resetForm();\r\n        }\r\n    }, [])\r\n\r\n    function resetForm() {\r\n        props.onChange(false);\r\n        setIsSubmitted(false);\r\n    }\r\n\r\n    // Validate form\r\n    function validateForm() {\r\n        setIsSubmitted(true);\r\n        return address && privateKey && (network === 'eth' || network === 'bsc');\r\n    }\r\n\r\n    // Set default form data\r\n    function setDefaultValue() {\r\n        setAddress(props?.data?.address || '');\r\n        setPrivateKey(props?.data?.privateKey || '');\r\n        setNetwork(props?.data?.network || 'eth');\r\n    }\r\n\r\n    // Handle Cancel button click\r\n    function handleCancel(event) {\r\n        resetForm();\r\n        props.onChange(false);\r\n    }\r\n\r\n    // Handle Submit button click\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n        submitWallet({ address: address, privateKey: privateKey, network: network }, props?.data?.address)\r\n            .then((result) => {\r\n                if (result.data.code == 200) {\r\n                    if (result.data.status) {\r\n                        $('#CloseModal').trigger('click');\r\n                        props.onChange(true);\r\n                    } else {\r\n                        dispatch(actAlertMsgFail(MESSAGES.ADD_FAILED_EXISTS));\r\n                    }\r\n                }\r\n            })\r\n            .catch((er) => {\r\n                dispatch(actAlertMsgFail(MESSAGES.NORMAL_ERROR));\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"modal fade \" id=\"formModal\" tabIndex=\"-1\" aria-labelledby=\"formModalLabel\" aria-hidden=\"true\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\">\r\n                <div className=\"modal-dialog modal-md modal-dialog-centered\">\r\n                    <div className=\"modal-content\">\r\n                        <form onSubmit={(e) => handleSubmit(e)}>\r\n                            <div className=\"modal-header\">\r\n                                <h6 className=\"modal-title text-dark\" id=\"formModalLabel\">\r\n                                    <b>{props?.data?.address ? 'Edit Wallet' : 'Add New Wallet'}</b>\r\n                                </h6>\r\n                                <button onClick={(e) => handleCancel(e)} id=\"CloseModal\" type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body p-4\">\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label font-14 text-muted\">Wallet Address <span className=\"text-danger\">*</span></label>\r\n                                    <input minLength={42} maxLength={42} type=\"text\" className=\"form-control\" required={true} onChange={(e) => setAddress(e.target.value)} value={address} />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label font-14 text-muted\">Private Key <span className=\"text-danger\">*</span></label>\r\n                                    <input minLength={64} maxLength={64} type=\"text\" className=\"form-control\" required={true} onChange={(e) => setPrivateKey(e.target.value)} value={privateKey} />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label font-14 text-muted\">Network <span className=\"text-danger\">*</span></label>\r\n                                    <select className=\"form-control\" required={true} onChange={(e) => setNetwork(e.target.value)} value={network}>\r\n                                        <option value=\"eth\">ETH</option>\r\n                                        <option value=\"bsc\">BSC</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer justify-content-start\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save Changes</button>\r\n                                <button type=\"button\" className=\"btn btn-light ms-2\" onClick={(e) => handleCancel(e)} data-bs-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FormModal;\r\n\r\n\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { get } from \"lodash\";\r\nimport { TableHeader, Pagination, Search } from \"../_components/DataTable\";\r\nimport { deleteWallet, getListWallets } from \"../redux/services/wallet\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { MESSAGES } from \"../_constants/messages\";\r\nimport { actAlertMsgSuccess, actAlertMsgFail } from \"../redux/action/alert\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport FormModal from \"../_components/Modal/FormModal\";\r\n\r\nconst HomePage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const ITEMS_PER_PAGE = 10;\r\n  const [listWallets, setListWallets] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n  const [totalItems, setTotalItems] = useState(20);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [isCopied, setIsCopied] = useState(false);\r\n  const [isShowConfirmDeleteWallet, setIsShowConfirmDeleteWallet] = useState(false);\r\n  const [selectedWallet, setSelectedWallet] = useState({});\r\n\r\n  const headers = [\r\n    { name: \"No.\", field: \"\", sortable: false },\r\n    { name: \"Wallet Address\", field: \"address\", sortable: true },\r\n    { name: \"Status\", field: \"status\", sortable: true },\r\n    { name: \"Network\", field: \"network\", sortable: true },\r\n    { name: \"Action\", field: \"\", sortable: false },\r\n  ];\r\n\r\n  const listWalletsData = useMemo(() => {\r\n    let computedData = listWallets;\r\n    if (search) {\r\n      computedData = computedData.filter((item) =>\r\n        item.address.toLowerCase().includes(search.toLowerCase()) || item.privateKey.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    setTotalItems(computedData.length);\r\n\r\n    //Sorting ListInvestor\r\n    if (sorting.field) {\r\n      const reversed = sorting.order === \"desc\" ? 1 : -1;\r\n      computedData = computedData.sort((a, b) => {\r\n        if (typeof a[sorting.field] === \"number\") {\r\n          return reversed * (a[sorting.field] - b[sorting.field]);\r\n        }\r\n        if (typeof a[sorting.field] === \"string\") {\r\n          return reversed * a[sorting.field].localeCompare(b[sorting.field]);\r\n        }\r\n      });\r\n    }\r\n\r\n    //Current Page slice\r\n    return computedData.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [currentPage, sorting, listWallets, search]);\r\n\r\n\r\n  // Page loaded\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n\r\n  // Load data \r\n  function loadData() {\r\n    getListWallets()\r\n      .then((result) => {\r\n        if (result.data.code == 200) {\r\n          setListWallets(result.data.data);\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        dispatch(actAlertMsgFail(MESSAGES.NORMAL_ERROR));\r\n      });\r\n  }\r\n\r\n  // Copy to clipboard\r\n  function handleCopyToClipboard() {\r\n    setIsCopied(true);\r\n    dispatch(actAlertMsgSuccess(MESSAGES.COPIED));\r\n  }\r\n\r\n  // Handle Edit button click\r\n  function handleEditWallet(wallet) {\r\n    setSelectedWallet(wallet);\r\n  }\r\n\r\n  // Handle Delete button click\r\n  function handleDeleteWallet(wallet) {\r\n    setIsShowConfirmDeleteWallet(true);\r\n    setSelectedWallet(wallet);\r\n  }\r\n\r\n  // Handle Confirm button click\r\n  function handleConfirmDeleteModal() {\r\n    deleteWallet(selectedWallet)\r\n      .then((result) => {\r\n        if (result.data.code == 200) {\r\n          if (result.data.status) {\r\n            dispatch(actAlertMsgSuccess(MESSAGES.DELETE_SUCCESS));\r\n            loadData();\r\n            handleCancelDeleteModal();\r\n          } else {\r\n            dispatch(actAlertMsgFail(MESSAGES.DELETE_FAILED_IN_USED));\r\n          }\r\n        } else {\r\n          dispatch(actAlertMsgFail(MESSAGES.DELETE_FAILED));\r\n        }\r\n      })\r\n      .catch((er) => {\r\n        dispatch(actAlertMsgFail(MESSAGES.NORMAL_ERROR));\r\n      });\r\n\r\n  }\r\n\r\n  // Handle Cancel button click\r\n  function handleCancelDeleteModal() {\r\n    setSelectedWallet({});\r\n    setIsShowConfirmDeleteWallet(false);\r\n  }\r\n\r\n  // Handle Wallet Form callback\r\n  function walletFormCallback(event) {\r\n    setSelectedWallet({});\r\n    if (event) {\r\n      loadData();\r\n    }\r\n  }\r\n\r\n  // Handle search by keyword\r\n  function handleSearch(value) {\r\n    setSearch(value);\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pp-homepage\">\r\n        <div className=\"container\">\r\n          <h2 className=\"section-title\">Manage Wallets</h2>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-8\"></div>\r\n            <div className=\"col-md-4\">\r\n              <Search onSearch={(value) => handleSearch(value)} placeholder=\"Search by wallet address or private key\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-history\">\r\n              <TableHeader headers={headers} onSorting={(field, order) => setSorting({ field, order })} />\r\n              <tbody>\r\n                {listWalletsData.length > 0 ? (\r\n                  listWalletsData.map((item, key) => {\r\n                    return (\r\n                      <tr key={key}>\r\n                        <td className=\"tdNo\">{key + 1}</td>\r\n                        <td className=\"tdAddress\">\r\n                          <CopyToClipboard text={item.address} onCopy={() => handleCopyToClipboard()}>\r\n                            <div className=\"tdAddressContent\">\r\n                              <span>{item.address}</span>\r\n                              <i className=\"mdi mdi-content-copy ms-2 text-warning\"></i>\r\n                            </div>\r\n                          </CopyToClipboard>\r\n                        </td>\r\n                        <td className=\"tdNetwork text-uppercase\">{item.isInUsed ? \"InUsed\":\"Free\"}</td>\r\n                        <td className=\"tdNetwork text-uppercase\">{item.network}</td>\r\n                        <td className=\"tdAction\">\r\n                          {/* <button type=\"button\" className=\"btn btn-sm btn-primary me-2\" onClick={() => handleEditWallet(item)} data-bs-toggle=\"modal\" data-bs-target=\"#formModal\"><i className=\"mdi mdi-square-edit-outline\"></i></button> */}\r\n                          <button type=\"button\" className=\"btn btn-sm btn-primary\" onClick={() => handleDeleteWallet(item)}><i className=\"mdi mdi-trash-can-outline me-1\"></i>Delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    )\r\n                  })\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"5\">No wallets available</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Pagination\r\n              total={totalItems}\r\n              itemsPerPage={ITEMS_PER_PAGE}\r\n              currentPage={currentPage}\r\n              className=\"float-right\"\r\n              onPageChange={(page) => setCurrentPage(page)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <SweetAlert\r\n        title=\"\"\r\n        show={isShowConfirmDeleteWallet}\r\n        showCancel\r\n        btnSize=\"sm\"\r\n        confirmBtnBsStyle=\"warning\"\r\n        cancelBtnBsStyle=\"secondary\"\r\n        confirmBtnText=\"Yes\"\r\n        cancelBtnText=\"No\"\r\n        onConfirm={() => handleConfirmDeleteModal()}\r\n        onCancel={() => handleCancelDeleteModal()}\r\n      >\r\n        {MESSAGES.CONFIRM_DELETE}\r\n      </SweetAlert>\r\n      <FormModal data={selectedWallet} onChange={(e) => walletFormCallback(e)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Router, Switch} from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { PrivateRoute } from \"./_components/PrivateRoute\";\r\nimport { actAlertClear, actAlertLinkClear } from \"./redux/action\";\r\nimport { history } from \"./_utils/history\";\r\nimport HomePage from \"./pages/HomePage\";\r\n\r\nconst App = (props) => {\r\n  const { utils, alert } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  toggleAlert(true);\r\n\r\n  window.setTimeout(function () {\r\n    toggleAlert(false);\r\n    if (alert && JSON.stringify(alert) != JSON.stringify({})) {\r\n      dispatch(actAlertClear());\r\n    }\r\n\r\n    if (utils.alertLink && utils.alertLink.type.trim().length > 0) {\r\n      dispatch(actAlertLinkClear());\r\n    }\r\n  }, 5000);\r\n\r\n  React.useEffect(() => {\r\n  \r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      {alert.message && (\r\n        <div id=\"toast-container\" className=\"toast-top-right\">\r\n          <div id=\"toast-id\" className={`toast toast-${alert.type}`}>\r\n            <div className=\"toast-message\">\r\n              <div>\r\n                <div>{alert.message}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {utils.alertLink.url.length > 0 && (\r\n        <a\r\n          onClick={() => dispatch(actAlertLinkClear())}\r\n          href={utils.alertLink.url}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <div id=\"toast-container\" className=\"toast-top-right\">\r\n            <div\r\n              id=\"toast-id\"\r\n              className={`toast toast-${utils.alertLink.type}`}\r\n            >\r\n              <div className=\"toast-message\">\r\n                <div>\r\n                  <div>{utils.alertLink.message}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      )}\r\n\r\n      <Router history={history}>\r\n        <Switch>\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={HomePage}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nfunction toggleAlert(isShow) {\r\n  var alertMsg = document.getElementById(\"toast-container\");\r\n  var alertIdMsg = document.getElementById(\"toast-id\");\r\n\r\n  // Prevent link alert is dismiss\r\n  if (alertMsg && alertMsg.parentElement.nodeName === \"A\") {\r\n    return;\r\n  }\r\n\r\n  if (alertMsg) {\r\n    alertMsg.style.display = isShow ? \"block\" : \"none\";\r\n  }\r\n  if (alertIdMsg) {\r\n    alertIdMsg.style.opacity = isShow ? 1 : 0;\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ACTION_CONST } from \"../../_constants/action\";\r\n\r\nexport default alert = (state = {}, action = { type: '' }) => {\r\n\r\n    switch (action.type) {\r\n        case ACTION_CONST.ALERT_SUCCESS:\r\n            return {\r\n                type: 'success',\r\n                message: action.message\r\n            };\r\n        case ACTION_CONST.ALERT_FAILS:\r\n            return {\r\n                type: 'error',\r\n                message: action.message\r\n            };\r\n        case ACTION_CONST.ALERT_WARNING:\r\n            return {\r\n                type: 'warning',\r\n                message: action.message\r\n            };\r\n        case ACTION_CONST.ALERT_CLEAR:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}","import { ACTION_CONST } from \"../../_constants/action\";\r\nconst initialState = {\r\n    blocking: false,\r\n    alertLink: {\r\n        type: '',\r\n        url: '',\r\n        message: ''\r\n    },\r\n}\r\nexport default (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ACTION_CONST.REQUEST_SUBMIT:\r\n            return {\r\n                ...state,\r\n                blocking: true,\r\n            }\r\n\r\n        case ACTION_CONST.REQUEST_DONE:\r\n            return {\r\n                ...state,\r\n                blocking: false,\r\n            }\r\n        case ACTION_CONST.CLICK_LEFT_BAR_ACTIVE:\r\n            return {\r\n                ...state,\r\n                leftBarActive: !state.leftBarActive,\r\n            }\r\n        case ACTION_CONST.ALERT_LINK:\r\n            return {\r\n                ...state,\r\n                alertLink: {\r\n                    type: action.alertType,\r\n                    url: action.alertUrl,\r\n                    message: action.alertMessage\r\n                }\r\n            };\r\n        case ACTION_CONST.ALERT_LINK_CLEAR:\r\n            return {\r\n                ...state,\r\n                alertLink: {\r\n                    type: '',\r\n                    url: '',\r\n                    message: ''\r\n                }\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport alert from './alert.reducer';\r\nimport utils from './utils.reducer';\r\nconst reducers = combineReducers({\r\n    alert,\r\n    utils\r\n});\r\n\r\nexport default reducers;","import { takeLatest, put, call } from \"redux-saga/effects\";\r\nimport { ACTION_CONST } from \"../../_constants/action\";\r\nimport { deleteWallet, getListWallets, submitWallet } from \"../services/wallet\";\r\n\r\nfunction* handleGetWallets() {\r\n    try {\r\n        const res = yield call(getListWallets);\r\n        if (res.status == 200) {\r\n            yield put({\r\n                type: ACTION_CONST.GET_WALLETS_SUCCESS,\r\n                data: {\r\n                    projects: res.data\r\n                },\r\n            });\r\n        }\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction* handleSubmitWalletForm(data) {\r\n    const res = yield call(submitWallet, data);\r\n    if (res.status == 200) {\r\n        yield put({\r\n            type: ACTION_CONST.SUBMIT_WALLET_SUCCESS,\r\n            data: data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* handleDeleteWallet(data) {\r\n    const res = yield call(deleteWallet, data);\r\n    if (res.status == 200) {\r\n        yield put({\r\n            type: ACTION_CONST.DELETE_WALLET_SUCCESS,\r\n            data: data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport function* watchSubmitGetWallets() {\r\n    yield takeLatest(\r\n        ACTION_CONST.SUBMIT_GET_WALLETS,\r\n        handleGetWallets\r\n    );\r\n}\r\n\r\nexport function* watchSubmitWalletForm() {\r\n    yield takeLatest(\r\n        ACTION_CONST.SUBMIT_WALLET_FORM,\r\n        handleSubmitWalletForm\r\n    );\r\n}\r\nexport function* watchDeleteWallet() {\r\n    yield takeLatest(\r\n        ACTION_CONST.DELETE_WALLET,\r\n        handleDeleteWallet\r\n    );\r\n}","import { fork, all } from 'redux-saga/effects';\r\nimport { watchSubmitGetWallets, watchSubmitWalletForm, watchDeleteWallet } from './walletSaga';\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(watchSubmitGetWallets),\r\n        fork(watchSubmitWalletForm),\r\n        fork(watchDeleteWallet)\r\n    ]);\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport reducers from './reducers';\r\n\r\n//Redux saga\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas/root_saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middleware = applyMiddleware(sagaMiddleware, createLogger());\r\n\r\nconst store = createStore(reducers, middleware);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}